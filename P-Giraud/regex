/*Les expressions régulières sont des schémas ou des motifs utilisés pour effectuer des recherches et des remplacements dans des chaines de caractères.
Ces schémas ou motifs sont tout simplement des séquences de caractères dont certains vont disposer de significations spéciales et qui vont nous servir
 de schéma de recherche. Concrètement, les expressions régulières vont nous permettre de vérifier la présence de certains caractères ou suites de caractères dans une expression.

 les methodes de l'objet String permettant de faire des recherches avec les esxpressions regulieres*/

 // match() prend un argument une regex et renvoie la 1er coorespondance trouvee dans la chaine de caractere.
  const chaine = 'Bonjour je m\'appelle Pierre';'
 let masque = /Pierre/;
 let masque2 = /[A-Z]/g ;// recherche les lettres majuscule de A a Z
 let masque3 = /[ ,`]/g //  ici c'est pour dire lorsque tu rencontre un espace ou une virgule ou une bactique alors coupe la chaine
 // g est un drapeau qui signifie recherche globale. Match() va donc parcourir toute la chaine de caractere et ne s'arretera pas a la premiere corespondance

//utilisation de match()

const result = chaine.match(masque);

// la methode search() se comporte comme la methode match() mais elle retourne plutot la position de la correspondance

//la methode replace() permet de remplacer un ou plusieurs caracteres dans une chaine de caractere
let div = document.querySelector('div')
div.innerText = chaine.replace(masque1,'Estelle')
//on lui demande ici de remplacer le regex masque1 par 'Estelle'. Si on veut remplacer toutes les correspondances s'il y en a plusieurs on utilise le drapeau g comme dans le cas de la methode match()

//la methode split() va elle diviser une chaine de caractere en sous chaines en fonction du separateur qu'on lui passe en argument
let souschaine = chaine.split(masque3)

// la methode exec() de l'objet RegExp se comporte un peu comme la methode match() sauf que l'argument pris par exec() est la chaine sur laquelle on effectue les recherches pour avoir la correspondance trouve on procede comme suit
let result = masque.exec(chaine);
div.innerText = result[0] // car le resultat renvoyer est un tableau et le texte se trouve a l'indice 0

// la methode test() de l'objet RegExp va faire une recherchje et renvoyer true s'il y a une correspondance et false sinon
if(masque.test(chaine)){
    //afficher un truc
}

//des masques plus puissantes : declaration d'une classe de caractere dans un masque

let chaine = 'Bonjour, je m\'appelle Pierre et vous ?'';
let masque1 = /[aeiouy]/g; //Cherche une voyelle
let masque2 = /j[aeiouy]/g; //Cherche "j" suivi d'une voyelle
let masque3 = /[aeiouy][aeiouy]/g; //Cherche une voyelle suivie d'une autre voyelle

//dans les expressions regulieres on appelle metacaractere les caracteres ayant un signification particuliere

let chaine = 'Bonjour, je suis ^Pierre^. Mon /numéro/ est le [06-36-65-65-65]';
let masque1 = /[^aeiouy]/g; //Cherche autre chose qu'une voyelle dans la chaine
let masque2 = /[\^aeiouy]/g; //Cherche ^ ou une une voyelle dans la chaine
let masque3 = /[aei^ouy]/g; //Cherche ^ ou une une voyelle dans la chaine
let masque4 = /[a-z]o/g;//Cherche une lettre minuscule suivie d'un o
let masque5 = /[a-zA-Z]o/g; //Cherche une lettre (min ou maj) suivie d'un o
let masque6 = /[a\-z]/g; //Cherche "a", "-" et "z"
let masque7 = /[0-9az-]/g; //Cherche un chiffre, "a", "z" et "-"
let masque8 = /[0-9[\]]/g; //Cherche un chiffre, "[" et "]"

let p0 = document.getElementById('p0');
let p1 = document.getElementById('p1');


p0.textContent = chaine;
p1.innerHTML =
    'Autre chose qu\'une voyelle : ' +  chaine.match(masque1) +
    '<br>Une voyelle ou un "^" : ' +  chaine.match(masque2) +
    '<br>Une voyelle ou un "^" : ' +  chaine.match(masque3) +
    '<br>Une minuscule suivie d\'un "o" : ' +  chaine.match(masque4) +
    '<br>Une minuscule ou majuscule suivie d\'un "o" : ' +  chaine.match(masque5) +
    '<br>Un "a", "-" ou un "z" : ' +  chaine.match(masque6) +
    '<br>Un chiffre, "a", "z" ou "-" : ' +  chaine.match(masque7) +
    '<br>Un chiffre, "[" ou "]" : ' +  chaine.match(masque8);

'
//les caracteres abreges ou predefinis
let chaine = 'Bonjour, je suis ^Pierre^. Mon /numéro/ est le [06-36-65-65-65]';'
let masque1 = /\w/g; //Correspond à un caractère alphanumérique ou "_"
let masque2 = /\W/g; //Corrrespond à tout sauf un caractère alphanumérique ou "_"
let masque3 = /\d/g; //Correspond à un chiffre
let masque4 = /[\da-z]/g; //Correspond à un chiffre ou à une lettre minuscule

let p0 = document.getElementById('p0');
let p1 = document.getElementById('p1');


p0.textContent = chaine;
p1.innerHTML =
    'Lettre, chiffre, ou "_" : ' +  chaine.match(masque1) +
    '<br>Tout sauf une lettre, un chiffre ou "_" : ' +  chaine.match(masque2) +
    '<br>Chiffre : ' +  chaine.match(masque3) +
    '<br>Chiffre ou lettre minuscule : ' +  chaine.match(masque4);   '
// reference https://www.pierre-giraud.com/javascript-apprendre-coder-cours/regex-classe-caractere-abregee/
